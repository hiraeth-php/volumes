[application]

	;
	; Aliases enable you to inform the dependency injector which concrete class should be built
	; to provide for a type-hinted interface.  If the interface does not exist, a built in php
	; class alias will be generated as an alias for the class.
	;

	aliases = {

	}

	;
	; Delegates are mini-factories for the dependency injector.  They provide all the information
	; required to register with the dependency injector as being capable of building a particular
	; class and contain all the requisite logic for building that class.
	;

	delegates = [
		"Hiraeth\Volumes\Visibility\UmaskConverterDelegate"
	]

	;
	; Providers are post-instantiation hooks.  Objects which implement their target interfaces will
	; be passed to them for additional setter injection or post-instantiation configuration.
	;

	providers = [
		"Hiraeth\Volumes\ApplicationProvider"
	]


[volumes]

	;
	; The scheme to be used with the stream wrapper, e.g vol://public/images/picture.jpg if the
	; scheme is `vol`.
	;

	scheme = vol

[fastroute]

	;
	; Masks are simple find and replace strings for route generation.  Each key will be replaced
	; with its corresponding value in a generated URL.
	;

	masks = {
		"vol://public/": "/storage/"
	}
